# Workflow build and deploy prod
name: Build and deploy prod

# workflow_dispatch enables manual run triggered from button on github.com (we use only manual run for now)
#on: [push, workflow_dispatch]
on: [workflow_dispatch]
jobs:
  build-and-deploy-prod:
    name: Build and deploy prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # login to Docker Hub (hub.docker.com) in order to push the built image do Docker Hub
      # you need to create account and access token in Docker Hub (click on user profile (right up corner) -> Account settings -> Personal access tokens, setup Read/Write/Delete scope)
      # save login and access token as secrets on github repository for this project
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      # this step is not required but recommended
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # chilibase/car-demo is repository on hub.docker.com, backend-1.0.0 is built docker image
      # (remark: chilibase is namespace (username), by creation repository, only car-demo is typed)
      - name: Build and push image for backend
        run: |
          cd ./run-env/car-demo-prod
          docker compose -f docker-compose-build.yml build backend
          docker push chilibase/car-demo:backend-1.0.0

      - name: Build and push image for frontend
        run: |
          cd ./run-env/car-demo-prod
          docker compose -f docker-compose-build.yml build frontend
          docker push chilibase/car-demo:frontend-1.0.0

      # connect to linux server via ssh
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa.ppk
          chmod 600 ~/.ssh/id_rsa.ppk
          cat >>~/.ssh/config <<END
          Host deploy-server
            HostName $SSH_HOST
            User $SSH_USERNAME
            IdentityFile ~/.ssh/id_rsa.ppk
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      # pull the built images from repository and run backend and frontend docker services
      # last command: docker system prune -af -> remove unused images to free up space
      - name: Deploy
        run: |
          ssh deploy-server \
            'docker pull chilibase/car-demo:backend-1.0.0 \
            && docker pull chilibase/car-demo:frontend-1.0.0 \
            && cd /home/run-env/car-demo-prod \
            && docker compose -f docker-compose-run.yml up -d backend frontend \
            && docker system prune -af'
